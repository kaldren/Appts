@page "/Appointments"
@inject HttpClient Http

<PageTitle>Appointments</PageTitle>

<h1>Appointments</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (appointment == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Title</th>
                <th>Start</th>
                <th>End</th>
            </tr>
        </thead>
        <tbody>
@*             @foreach (var forecast in appointments)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            } *@
            <tr>
                <td>@appointment.Id</td>
                <td>@appointment.Title</td>
                <td>@appointment.Start</td>
                <td>@appointment.End</td>
            </tr>
        </tbody>
    </table>
}

@code {
    private AppointmentsResponse? appointment;

    protected override async Task OnInitializedAsync()
    {
        Http.DefaultRequestHeaders.Remove("Authorization");
        Http.DefaultRequestHeaders.Add("Authorization", "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJqb2huZG9lNkBleGFtcGxlLmNvbSIsImp0aSI6Ijc2YjU1N2QxLTBiNGMtNDYzMS1hMTg2LWI5OWFkYTBkZjcwMCIsImV4cCI6MTcxNzgyNzg3MiwiaXNzIjoiQXBwdHMiLCJhdWQiOiJBcHB0cyJ9.hUmeY6nabVD9MUi_uv9k-NxekT7wfMVAcC_o1G1Xh08");
        appointment = await Http.GetFromJsonAsync<AppointmentsResponse>("api/appointments/8F61C651-EBF0-4627-B4B9-536A373C8921");
    }

    public class AppointmentsResponse
    {
        public Guid Id { get; set; }
        public string Title { get; set; }
        public DateTimeOffset Start { get; set; }
        public DateTimeOffset End { get; set; }
    }
}
